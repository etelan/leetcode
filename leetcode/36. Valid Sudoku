import java.lang.Character;

class Solution {
    public boolean isValidSudoku(char[][] board) {
        
        // Row
        for (int rowIndex = 0; rowIndex < 9; rowIndex++) {
            if (isDuplicate(board[rowIndex])) {
                return false;
            }
        }
        
        // Collumn
        for (int collumnIndex = 0; collumnIndex < 9; collumnIndex++) {
            char[] collumn = new char[9];
            for (int rowIndex = 0; rowIndex < 9; rowIndex++) {
                collumn[rowIndex] = board[rowIndex][collumnIndex];
            }
            if (isDuplicate(collumn)) {
                return false;
            }
        }
        
        // Boxes
        for (int boxNumberCollumn = 1; boxNumberCollumn < 4; boxNumberCollumn++) {
            for (int boxNumberRow = 1; boxNumberRow < 4; boxNumberRow++) {
                
                int startRow = (boxNumberRow - 1) * 3;
                int startCollumn = (boxNumberCollumn - 1) * 3;
                
                char[] box = new char[9];
                
                int count = 0;
                for (int rowIndex = startRow; rowIndex < startRow + 3; rowIndex++) {
                    
                    for (int collumnIndex = startCollumn; collumnIndex < startCollumn + 3; collumnIndex++) {
                        box[count] = board[rowIndex][collumnIndex];
                        count++;
                        
                    }
                }
                
                
                if (isDuplicate(box)) {
                    return false;
                }
                
            }
            
            
            
        }
        
        return true;
    }
    
    public boolean isDuplicate(char[] characters) {
        Set<Character> set = new HashSet<Character> (); 
        for (Character digit : characters) { 
            if (set.add(digit) == false 
                && !digit.equals(Character.valueOf('.'))
               && !digit.equals((char) 0)
                )
            { 
                System.out.println("Digit: " + String.valueOf(digit));
                return true;
            } 
        } 
        return false;
    }
}
